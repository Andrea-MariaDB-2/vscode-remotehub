{
    "name": "remotehub",
    "displayName": "RemoteHub",
    "description": "RemoteHub is a proof-of-concept extension that allows for opening a remote GitHub repository as a workspace",
    "version": "0.2.0",
    "author": {
        "name": "Eric Amodio",
        "email": "eamodio@gmail.com"
    },
    "publisher": "eamodio",
    "license": "SEE LICENSE IN LICENSE",
    "homepage": "https://github.com/eamodio/vscode-remotehub/blob/master/README.md",
    "bugs": {
        "url": "https://github.com/eamodio/vscode-remotehub/issues"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/eamodio/vscode-remotehub.git"
    },
    "engines": {
        "vscode": "^1.26.0"
    },
    "main": "./dist/extension",
    "icon": "images/remotehub-icon.png",
    "preview": true,
    "enableProposedApi": true,
    "categories": [
        "Other"
    ],
    "keywords": [
        "github",
        "remote",
        "repository",
        "browse"
    ],
    "activationEvents": [
        "onFileSystem:remotehub",
        "onCommand:remotehub.addRepository",
        "onCommand:remotehub.cloneRepository",
        "onCommand:remotehub.openRepository"
    ],
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "RemoteHub configuration",
            "properties": {
                "remotehub.githubToken": {
                    "type": "string",
                    "description": "Specifies the GitHub personal access token to use for authentication with the GitHub GraphQL API",
                    "scope": "window"
                },
                "remotehub.insiders": {
                    "type": "boolean",
                    "default": false,
                    "description": "Specifies whether to enable experimental features",
                    "scope": "window"
                },
                "remotehub.search": {
                    "type": "string",
                    "default": "sourcegraph",
                    "enum": [
                        "github",
                        "sourcegraph"
                    ],
                    "description": "Specifies the remote service to use for repository search\n `github` - use GitHub search (only filename search)\n `sourcegraph` - use Sourcegraph search",
                    "scope": "window"
                },
                "remotehub.traceLevel": {
                    "type": "string",
                    "default": "debug",
                    "enum": [
                        "silent",
                        "errors",
                        "verbose",
                        "debug"
                    ],
                    "description": "Specifies how much (if any) output will be sent to the RemoteHub output channel",
                    "scope": "window"
                }
            }
        },
        "commands": [
            {
                "command": "remotehub.addRepository",
                "title": "Add GitHub Repository to Workspace...",
                "category": "RemoteHub"
            },
            {
                "command": "remotehub.cloneRepository",
                "title": "Clone GitHub Repository...",
                "category": "RemoteHub"
            },
            {
                "command": "remotehub.cloneOpenedRepository",
                "title": "Clone Opened GitHub Repository...",
                "category": "RemoteHub"
            },
            {
                "command": "remotehub.openRepository",
                "title": "Open GitHub Repository...",
                "category": "RemoteHub"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "remotehub.cloneOpenedRepository",
                    "when": "remotehub:hasWorkspaceFolder"
                }
            ]
        }
    },
    "scripts": {
        "build": "webpack --env.development",
        "bundle": "webpack --env.production",
        "clean": "git clean -Xdf",
        "lint": "tslint --project tsconfig.json",
        "pack": "vsce package",
        "pretty": "prettier --config .prettierrc --loglevel warn --write \"./**/*.ts\" && tslint --project tsconfig.json --fix",
        "pub": "vsce publish",
        "rebuild": "npm run reset && npm run build",
        "reset": "npm run clean && npm install --no-save",
        "watch": "webpack --watch --env.development",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "vscode:prepublish": "npm run reset && npm run bundle"
    },
    "dependencies": {
        "@octokit/rest": "16.15.0",
        "graphql-request": "1.8.2",
        "node-fetch": "2.3.0",
        "tslib": "1.9.3"
    },
    "devDependencies": {
        "@types/node": "10.1.4",
        "@types/node-fetch": "2.1.4",
        "clean-webpack-plugin": "1.0.1",
        "prettier": "1.16.4",
        "prettier-tslint": "0.4.2",
        "tslint": "5.12.1",
        "tslint-loader": "3.5.4",
        "tslint-prettiest": "0.0.1",
        "ts-loader": "5.3.3",
        "typescript": "3.3.3",
        "vscode": "1.1.29",
        "webpack": "4.29.3",
        "webpack-cli": "3.2.3"
    }
}
